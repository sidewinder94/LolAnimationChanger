<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyBackground" xml:space="preserve">
    <value>2. Apply Theme to Launcher</value>
  </data>
  <data name="BadFolder" xml:space="preserve">
    <value>I can't find the "RADS" folder in the selected directory.
Now closing the application.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CantCreateDLDir" xml:space="preserve">
    <value>Can't create the temporary download directory</value>
  </data>
  <data name="ChooseDownload" xml:space="preserve">
    <value>Choose a theme to Download : </value>
  </data>
  <data name="ConnectionError" xml:space="preserve">
    <value>Connection Error</value>
  </data>
  <data name="ConnectionMessage" xml:space="preserve">
    <value>Can't download manifest file, please check your internet connection</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download !</value>
  </data>
  <data name="DownloadBackground" xml:space="preserve">
    <value>1. Download Animation Files</value>
  </data>
  <data name="DownloadError" xml:space="preserve">
    <value>Download Error</value>
  </data>
  <data name="DownloadFailed" xml:space="preserve">
    <value>Failed to download the Theme Archive.
It can be due to one of the following problems :
- The Checksum verification failed (to retry without checking click Yes)
- You are not connected to the internet or cannot access dl.dropboxusercontent.com
- The destination directory is write-protected or your disk is full
Retry ?</value>
  </data>
  <data name="DownloadSuccess" xml:space="preserve">
    <value>Download Complete !</value>
  </data>
  <data name="DownloadSucceeded" xml:space="preserve">
    <value>Theme Downloaded Successfully</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FindLolLauncher" xml:space="preserve">
    <value>Find League of Legends Launcher (lol.launcher.exe)</value>
  </data>
  <data name="ApplyTheme" xml:space="preserve">
    <value>Apply !</value>
  </data>
  <data name="DisplayUnknown" xml:space="preserve">
    <value>Display Unknown Themes (use at your own risks)</value>
  </data>
  <data name="ForceExtraction" xml:space="preserve">
    <value>Force Extraction for themes already present</value>
  </data>
  <data name="SelectTheme" xml:space="preserve">
    <value>Select a Theme to apply : </value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ApplySettingsError" xml:space="preserve">
    <value>Could not read/write the settings file.
Please check that you can read/write the following file : 
{0}{1}</value>
  </data>
  <data name="Editor" xml:space="preserve">
    <value>Editor : </value>
  </data>
  <data name="ExtractionError" xml:space="preserve">
    <value>Couldn't extract the theme.
Please check that you have the rights to write in the following directory : 
{0}{1}</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>License : </value>
  </data>
  <data name="MainTitle" xml:space="preserve">
    <value>League of Legends Animation Changer</value>
  </data>
  <data name="SaveConfigError" xml:space="preserve">
    <value>Coudn't save config file.
Please check that you can write in the application directory.</value>
  </data>
  <data name="SettingsBackupError" xml:space="preserve">
    <value>Could not backup your original Theme Settings File.
Do you want to continue anyway ?</value>
  </data>
  <data name="Sources" xml:space="preserve">
    <value>Sources :</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ApplySuccess" xml:space="preserve">
    <value>Successfully applyed selected theme</value>
  </data>
  <data name="ApplyFailed" xml:space="preserve">
    <value>Failed to apply selected theme</value>
  </data>
  <data name="RunAs" xml:space="preserve">
    <value>Run As Admin</value>
  </data>
  <data name="PackNewTheme" xml:space="preserve">
    <value>Pack New Theme</value>
  </data>
  <data name="Pack" xml:space="preserve">
    <value>Pack !</value>
  </data>
  <data name="PackingError" xml:space="preserve">
    <value>Couldn't zip the theme.
Please check that you have the rights to write in the following directory : 
{0}{1}</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="ImportUserTheme" xml:space="preserve">
    <value>Import User Theme</value>
  </data>
</root>